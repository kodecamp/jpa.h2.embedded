package in.kodecamp.entities;
// Generated Apr 22, 2019, 1:54:15 PM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * CourseSection generated by hbm2java
 */
@Entity
@Table(name = "SECTION")
public class SectionEntity implements java.io.Serializable {

	/**
   * 
   */
  private static final long serialVersionUID = 1L;

  @Id
	@Column(name = "ID", unique = true, nullable = false, length = 10)
	private String id;

	@Version
	@Column(name = "VERSION")
	private Integer version;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FK_COURSE_CODE")
	private CourseEntity course;

	@Column(name = "SHORT_NAME", length = 1)
	private String shortName;

	@Column(name = "NAME")
	private String name;

	@Column(name = "TOTAL_STRENGTH")
	private Integer totalStrength;

	@Temporal(TemporalType.DATE)
	@Column(name = "MODIFIED_ON")
	private Date modifiedOn;

	@Column(name = "MODIFIED_BY")
	private String modifiedBy;

	@Column(name = "IS_ACTIVE")
	private Boolean isActive;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "section")
	private Set<StudentEntity> students = new HashSet<StudentEntity>(0);

	public SectionEntity() {
	}

	public SectionEntity(String id) {
		this.id = id;
	}

	public SectionEntity(String id, CourseEntity course, String shortName,
			String name, Integer totalStrength, Date modifiedOn,
			String modifiedBy, Boolean isActive, Set<StudentEntity> students) {
		this.id = id;
		this.course = course;
		this.shortName = shortName;
		this.name = name;
		this.totalStrength = totalStrength;
		this.modifiedOn = modifiedOn;
		this.modifiedBy = modifiedBy;
		this.isActive = isActive;
		this.students = students;
	}

	
	
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public CourseEntity getCourse() {
		return this.course;
	}

	public void setCourse(CourseEntity course) {
		this.course = course;
	}

	public String getShortName() {
		return this.shortName;
	}

	public void setShortName(String shortName) {
		this.shortName = shortName;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Integer getTotalStrength() {
		return this.totalStrength;
	}

	public void setTotalStrength(Integer totalStrength) {
		this.totalStrength = totalStrength;
	}

	public Date getModifiedOn() {
		return this.modifiedOn;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}

	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	public Set<StudentEntity> getStudents() {
		return this.students;
	}

	public void setStudents(Set<StudentEntity> students) {
		this.students = students;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		SectionEntity other = (SectionEntity) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "SectionEntity [id=" + id + ", version=" + version + ", shortName=" + shortName + ", name=" + name
				+ ", totalStrength=" + totalStrength + ", modifiedOn=" + modifiedOn + ", modifiedBy=" + modifiedBy
				+ ", isActive=" + isActive + "]";
	}

	public void addStudent(StudentEntity student) {
		this.students.add(student);
		student.setSection(this);
	}

	
	

}
