package in.kodecamp.entities;
// Generated Apr 22, 2019, 1:54:15 PM by Hibernate Tools 5.2.11.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name = "COURSE")
public class CourseEntity implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;

	@Id
	@Column(name = "CODE")
	private String code;

	@Version
	@Column(name = "VERSION")
	private Integer version;

	@Column(name = "TITLE")
	private String title;

	@Column(name = "DURATION")
	private Integer duration;

	@Column(name = "TOTAL_SEMESTERS")
	private Integer totalSemesters;

	@Temporal(TemporalType.DATE)
	@Column(name = "MODIFIED_ON")
	private Date modifiedOn;

	@Column(name = "MODIFIED_BY")
	private String modifiedBy;

	@Column(name = "IS_ACTIVE")
	private Boolean isActive;

	// RELATIONSHIPS
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "course", cascade = CascadeType.ALL)
	private Set<StudentEntity> students = new HashSet<StudentEntity>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "course", cascade = CascadeType.ALL)
	private Set<SectionEntity> courseSections = new HashSet<SectionEntity>(0);

	public CourseEntity() {
	}

	public CourseEntity(String code) {
		this.code = code;
	}

	public CourseEntity(String code, String title, int duration,
			int totalSemesters, Date modifiedOn, String modifiedBy,
			Boolean isActive, Set<StudentEntity> students,
			Set<SectionEntity> courseSections) {
		this.code = code;
		this.title = title;
		this.duration = duration;
		this.totalSemesters = totalSemesters;
		this.modifiedOn = modifiedOn;
		this.modifiedBy = modifiedBy;
		this.isActive = isActive;
		this.students = students;
		this.courseSections = courseSections;
	}

	public String getCode() {
		System.out.println("get code called from course entity ");
		return this.code;
	}

	public void setCode(String code) {
		System.out.println("set code called from course entity value :" + code);
		this.code = code;
	}

	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public Integer getDuration() {
		return this.duration;
	}

	public void setDuration(Integer duration) {
		this.duration = duration;
	}

	public Integer getTotalSemesters() {
		return this.totalSemesters;
	}

	public void setTotalSemesters(Integer totalSemesters) {
		this.totalSemesters = totalSemesters;
	}

	public Date getModifiedOn() {
		return this.modifiedOn;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}

	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	public Set<StudentEntity> getStudents() {
		return this.students;
	}

	public void setStudents(Set<StudentEntity> students) {
		this.students = students;
	}

	public Set<SectionEntity> getCourseSections() {
		return this.courseSections;
	}

	public void setCourseSections(Set<SectionEntity> courseSections) {
		this.courseSections = courseSections;
	}

	@Override
	public String toString() {
		return "CourseEntity [code=" + code + ", version=" + version + ", title=" + title + ", duration=" + duration
				+ ", totalSemesters=" + totalSemesters + ", modifiedOn=" + modifiedOn + ", modifiedBy=" + modifiedBy
				+ ", isActive=" + isActive + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((code == null) ? 0 : code.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		CourseEntity other = (CourseEntity) obj;
		if (code == null) {
			if (other.code != null) {
				return false;
			}
		} else if (!code.equals(other.code)) {
			return false;
		}
		return true;
	}

	public void addStudent(StudentEntity student) {
		this.students.add(student);
		student.setCourse(this);
	}

	public void addSection(SectionEntity section) {
		this.courseSections.add(section);
		section.setCourse(this);
	}

}
